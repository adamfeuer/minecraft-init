#!/bin/bash
# /etc/init.d/minecraft

### BEGIN INIT INFO
# Provides:   minecraft
# Required-Start: $local_fs $remote_fs
# Required-Stop:  $local_fs $remote_fs
# Should-Start:   $network
# Should-Stop:    $network
# Default-Start:  2 3 4 5
# Default-Stop:   0 1 6
# Short-Description:    Minecraft server
# Description:    Init script for minecraft/bukkit server, with rolling logs and use of ramdisk for less lag. 
### END INIT INFO

### Based on http://www.minecraftwiki.net/wiki/Server_startup_script


# Name of server.jar file
SERVICE='minecraft_server.jar'
# User that should run the server
USERNAME="martin"
# Path to minecraft directory 
MCPATH='/home/martin/minecraft'
CPU_COUNT=2
# Change the values of -Xmx###M and -Xms###M to how much ram you want to give to the
# server. Remember to give the ramdisk enough space. Subtract from the total amount 
# of RAM available the size of your map and the RAM-consumption of your base system.
INVOCATION="java -Xmx1024M -Xms1024M -XX:+UseConcMarkSweepGC -XX:+CMSIncrementalPacing -XX:ParallelGCThreads=$CPU_COUNT -XX:+AggressiveOpts -jar $SERVICE nogui"
# Where the world backups should go
BACKUP_PATH="${MCPATH}/backups"
# Where the logs are copied when running log-roll 
LOGPATH=$BACKUP_PATH
# Name of the world in the server.properties file
WORLD='Crazy-Awesome'
# Where the world is located on the disk
WORLD_STORAGE="${MCPATH}/disk-$WORLD"
#Path to the the mounted ramdisk default in Ubuntu: /dev/shm
RAMDISK='/dev/shm'


ME=`whoami`
as_user() {
if [ $ME == $USERNAME ] ; then
	bash -c "$1"
else
	su - $USERNAME -c "$1"
fi
}
datepath() {
# datepath path filending-to-check returned-filending
if [ -e $1`date +%x`$2 ]
then
	echo $1`date +%FT%T`$3
else
	echo $1`date +%F`$3
fi
}
mc_start() {
if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
then
	echo "Tried to start but $SERVICE was already running!"
else
	echo "$SERVICE was not running... starting."
	
	cd $MCPATH
	as_user "cd $MCPATH && screen -dmS minecraft $INVOCATION"
	sleep 7
	if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
	then
		echo "$SERVICE is now running."
	else
		echo "Could not start $SERVICE."
	fi
fi
}

mc_saveoff() {
if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
then
	echo "$SERVICE is running... suspending saves"
	as_user "screen -p 0 -S minecraft -X eval 'stuff \"save-off\"\015'"
	as_user "screen -p 0 -S minecraft -X eval 'stuff \"save-all\"\015'"
	sync
	sleep 10
else
	echo "$SERVICE was not running. Not suspending saves."
fi
}

mc_saveon() {
if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
then
	echo "$SERVICE is running... re-enabling saves"
	as_user "screen -p 0 -S minecraft -X eval 'stuff \"save-on\"\015'"
else
	echo "$SERVICE was not running. Not resuming saves."
fi
}

mc_stop() {
if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
then
	echo "$SERVICE is running... stopping."
	as_user "screen -p 0 -S minecraft -X eval 'stuff \"save-all\"\015'"
	sleep 10
	as_user "screen -p 0 -S minecraft -X eval 'stuff \"stop\"\015'"
	sleep 7
else
	echo "$SERVICE was not running."
fi
if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
then
	echo "$SERVICE could not be shut down... still running."
else
	echo "$SERVICE is shut down."
fi
}
log_roll() {
LOGFILE="server-`date '+%Y-%m-%d-%H%M'`.log" 
as_user "mv $MCPATH/server.log $LOGPATH/$LOGFILE && bzip2 $LOGPATH/$LOGFILE"
echo "Server log files have been moved to $LOGPATH/$LOGFILE."
}
mc_world_backup() {
if [ ! -d $BACKUP_PATH ] ; then
    mkdir $BACKUP_PATH
    chown $USERNAME:$USERNAME $BACKUP_PATH
        fi
        echo "Backing up minecraft world $WORLD..."
        as_user "cd $MCPATH && tar hjcf $BACKUP_PATH/$WORLD-`date '+%Y-%m-%d-%H%M'`.tar.bz2 $WORLD"
        echo "Backed up $WORLD"
        echo "Backing up the minecraft server executable..."
        as_user "cd $MCPATH && cp minecraft_server.jar $BACKUP_PATH/minecraft_server-`date '+%Y-%m-%d-%H%M'`.jar"
        echo "Backed up minecraft server executable."
}
to_ram() {
        if [ ! -d $RAMDISK/$WORLD ] ; then
           mkdir $RAMDISK/$WORLD
           chown $USERNAME:$USERNAME $RAMDISK/$WORLD 
        fi
	if [ -L $MCPATH/$WORLD ]
	then
		as_user "rsync -rt $WORLD_STORAGE/ $MCPATH/$WORLD/"
		echo "World copied to ram"
	fi
}
to_disk() {
	as_user "rsync -rt $MCPATH/$WORLD/ $WORLD_STORAGE/"
	echo "World copied to disk"
}

case "$1" in
	start)
		# Starts the server
		to_ram
		mc_start
		;;
	stop)
		# Stops the server
		as_user "screen -p 0 -S minecraft -X eval 'stuff \"say SERVER SHUTTING DOWN!\"\015'"
		mc_stop
		to_disk
		;;
	restart)
		# Restarts the server
		as_user "screen -p 0 -S minecraft -X eval 'stuff \"say SERVER REBOOT IN 10 SECONDS.\"\015'"
		mc_stop
		mc_start
		;;
	backup)
		# Backups world and minecraft server jar
		as_user "screen -p 0 -S minecraft -X eval 'stuff \"say Backing up world.\"\015'"
		mc_saveoff
		mc_world_backup
		mc_saveon
		as_user "screen -p 0 -S minecraft -X eval 'stuff \"say Backup complete.\"\015'"
		;;
	to-disk)
		# Writes from the ramdisk to disk, in case the server crashes. 
		# Using ramdisk speeds things up a lot, especially if you allow
		# teleportation on the server.
		mc_saveoff
		to_disk
		mc_saveon
		;;
	connected)
		# Lists connected users
		as_user "screen -p 0 -S minecraft -X eval 'stuff list\015'"
		sleep 3s
		tac $MCPATH/server.log | grep -m 1 "Connected"
		;;
	log-roll)
		# Moves and bzip2 compresses the logfile, a big log file slows down the
		# server A LOT (what was notch thinking?)
		as_user "screen -p 0 -S minecraft -X eval 'stuff \"say ROUTINE REBOOT IN 10 SECONDS.\"\015'"
		mc_stop
		log_roll 
		mc_start
		;;
	status)
		# Shows server status
		if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
		then
			echo "$SERVICE is running."
		else
			echo "$SERVICE is not running."
		fi
		;;

	*)
		echo "Usage: /etc/init.d/minecraft {start|stop|backup|log-roll|to-disk|connected|status|restart}"
		exit 1
		;;
esac

exit 0
